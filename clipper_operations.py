import pyclipper
import inspect, os
import sys
sys.path.append(os.path.split(os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe()))))[0])



def diff_layers( _subj,_clip,closed):


    pc = pyclipper.Pyclipper()
    pc.AddPaths(_clip, pyclipper.PT_CLIP, True)
    try:
        pc.AddPaths(_subj, pyclipper.PT_SUBJECT, closed)
    except:
        raise RuntimeError

    if closed:
        solution = pc.Execute(pyclipper.CT_DIFFERENCE, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
    else:
        solution = pc.Execute2(pyclipper.CT_DIFFERENCE, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
        solution = pyclipper.PolyTreeToPaths(solution)

    return solution

def union_layers( _subj,_clip,closed):


    pc = pyclipper.Pyclipper()
    pc.AddPaths(_clip, pyclipper.PT_CLIP, True)
    try:
        pc.AddPaths(_subj, pyclipper.PT_SUBJECT, closed)
    except:
        raise RuntimeError

    if closed:
        solution = pc.Execute(pyclipper.CT_UNION, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
    else:
        solution = pc.Execute2(pyclipper.CT_UNION, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
        solution = pyclipper.PolyTreeToPaths(solution)

    return solution

# def union_layers_polytree( _subj,_clip,closed):
#
#
#     pc = pyclipper.Pyclipper()
#     pc.AddPaths(_clip, pyclipper.PT_CLIP, True)
#     try:
#         pc.AddPaths(_subj, pyclipper.PT_SUBJECT, closed)
#     except:
#         raise RuntimeError
#
#     return pc.Execute2(pyclipper.CT_UNION, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)


def diff_layers_as_polytree( _subj,_clip,closed):

    pc = pyclipper.Pyclipper()
    pc.AddPaths(_clip, pyclipper.PT_CLIP, True)
    try:
        pc.AddPaths(_subj, pyclipper.PT_SUBJECT, closed)
    except:
        raise RuntimeError

    solution = pc.Execute2(pyclipper.CT_DIFFERENCE, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)

    return solution


def inter_layers( _subj,_clip,closed):
    if len(_clip) == 0 :
        return []

    pc = pyclipper.Pyclipper()
    try:
        pc.AddPaths(_clip, pyclipper.PT_CLIP, True)
    except:
        raise RuntimeError

    try:
        pc.AddPaths(_subj, pyclipper.PT_SUBJECT, closed)
    except:
        raise RuntimeError

    if closed:
        solution = pc.Execute(pyclipper.CT_INTERSECTION, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
    else:
        solution = pc.Execute2(pyclipper.CT_INTERSECTION, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
        solution = pyclipper.PolyTreeToPaths(solution)

    return solution

def inter_layers_as_polytree( _subj,_clip,closed):

    pc = pyclipper.Pyclipper()

    pc.AddPaths(_clip, pyclipper.PT_CLIP, True)

    pc.AddPaths(_subj, pyclipper.PT_SUBJECT, closed)

    solution = pc.Execute2(pyclipper.CT_INTERSECTION, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)

    return solution

def isPaths(paths):
    assert(isinstance(paths[0][0][0], int))


def offset_default(polygon_stack,val):
    path = polygon_stack.polygons
    po = pyclipper.PyclipperOffset()
    po.AddPaths(path,pyclipper.JT_SQUARE,pyclipper.ET_CLOSEDPOLYGON)


    offseted = po.Execute(pyclipper.scale_to_clipper(val))

    return offseted

# @profile
def offset(polygon_stack,val):
    path = polygon_stack.polygons
    # path = pyclipper.ReversePaths(polygon_stack.polygons)
    # for polygon_index in range(len(path)):
    #     if not pyclipper.Orientation(path[polygon_index]):
    #         path[polygon_index] = pyclipper.ReversePath(path[polygon_index])
    po = pyclipper.PyclipperOffset()
    po.AddPaths(path,pyclipper.JT_MITER,pyclipper.ET_CLOSEDPOLYGON)


    offseted = po.Execute(pyclipper.scale_to_clipper(val))

    return offseted

def SinglePolygonOffset(single_line,val):
    path = single_line
    # path = pyclipper.ReversePaths(polygon_stack.polygons)
    # for polygon_index in range(len(path)):
    #     if not pyclipper.Orientation(path[polygon_index]):
    #         path[polygon_index] = pyclipper.ReversePath(path[polygon_index])
    po = pyclipper.PyclipperOffset()
    po.AddPath(path,pyclipper.JT_SQUARE,pyclipper.ET_CLOSEDPOLYGON)


    offseted = po.Execute(pyclipper.scale_to_clipper(float(val)))

    return offseted


# def diff_layers_as_path( _subj,_clip):
#
#     # if not multiple_paths:
#     #     _subj = [_subj,]
#
#     pc = pyclipper.Pyclipper()
#     pc.AddPaths(_clip, pyclipper.PT_CLIP, True)
#     try:
#         pc.AddPaths(_subj, pyclipper.PT_SUBJECT, True)
#     except:
#         print("sgs")
#
#     solution = pc.Execute(pyclipper.CT_DIFFERENCE, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
#
#     return solution


# def inter_layers_as_path( _subj,_clip):
#
#
#     pc = pyclipper.Pyclipper()
#     try:
#         pc.AddPaths(_clip, pyclipper.PT_CLIP, True)
#     except:
#         print("dsgs")
#     try:
#         pc.AddPaths(_subj, pyclipper.PT_SUBJECT, True)
#     except:
#         print("bubu")
#
#     solution = pc.Execute(pyclipper.CT_INTERSECTION, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
#
#     return solution


# def intersect_layers_new(botLay,thisLay, topLay):
#     upskins = []
#     downskins= []
#
#     pc = pyclipper.Pyclipper()
#     try:
#         pc.AddPaths(topLay, pyclipper.PT_CLIP, True)
#     except:
#         print("dsgs")
#     try:
#         pc.AddPaths(thisLay, pyclipper.PT_SUBJECT, True)
#     except:
#         print("bubu")
#
#     solution = pc.Execute(pyclipper.CT_DIFFERENCE, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)
#     # util.vizz_2d_multi(solution)
#
#     return solution

def LinesOffset(lines, offset_value,does_visualize=False):
    # lines = [[[0,0],[1,1]],[[5,5],[6,6]]]
    scaled_lines = pyclipper.scale_to_clipper(lines)

    pc = pyclipper.PyclipperOffset()
    pc.AddPaths(scaled_lines, pyclipper.JT_SQUARE, pyclipper.ET_OPENSQUARE)

    solution = pc.Execute(pyclipper.scale_to_clipper(offset_value))
    solution = pyclipper.scale_from_clipper(solution)

    if does_visualize:
        import matplotlib.pyplot as plt 
        for line in lines:
            plt.plot([i[0] for i in line], [i[1] for i in line])

        for line in solution:
            plt.plot([i[0] for i in line], [i[1] for i in line])
            plt.plot([line[-1][0],line[0][0]],[line[-1][1],line[0][1]])
        plt.show()

    return solution

def main():
    import pyclipper

    # subj = (
    #     ((180, 200), (260, 200), (260, 150), (180, 150)),
    #     ((215, 160), (230, 190), (200, 190))
    # )
    # clip = ((190, 210), (240, 210), (240, 130), (190, 130))

    # pc = pyclipper.Pyclipper()
    # pc.AddPath(clip, pyclipper.PT_CLIP, True)
    # pc.AddPaths(subj, pyclipper.PT_SUBJECT, True)

    # solution = pc.Execute(pyclipper.CT_INTERSECTION, pyclipper.PFT_EVENODD, pyclipper.PFT_EVENODD)

    paths = [[[[-36.324192810058591, -1.5118082046508796], [-36.324192810058591, -0.011808204650879617]], [[-36.324192810058591, -0.011808204650879617], [-34.824192810058591, 1.4881917953491204]], [[-34.824192810058591, 1.4881917953491204], [-34.824192810058591, -0.011808204650879617]]], [[[-34.824192810058591, -3.0118082046508796], [-34.824192810058591, -4.5118082046508796]], [[-34.824192810058591, -4.5118082046508796], [-34.824192810058591, -6.0118082046508796]], [[-34.824192810058591, -6.0118082046508796], [-34.824192810058591, -7.5118082046508796]], [[-34.824192810058591, -7.5118082046508796], [-34.824192810058591, -9.0118082046508796]], [[-34.824192810058591, -9.0118082046508796], [-34.824192810058591, -10.51180820465088]]], [[[-32.660424041748044, -11.906857299804688], [-32.660424041748044, -10.406857299804688]]], [[[-31.160424041748044, -7.4068572998046882], [-31.160424041748044, -8.9068572998046882]], [[-31.160424041748044, -8.9068572998046882], [-31.160424041748044, -10.406857299804688]], [[-31.160424041748044, -10.406857299804688], [-31.160424041748044, -11.906857299804688]], [[-31.160424041748044, -11.906857299804688], [-31.160424041748044, -13.406857299804688]], [[-31.160424041748044, -13.406857299804688], [-29.660424041748044, -13.406857299804688]], [[-29.660424041748044, -13.406857299804688], [-29.660424041748044, -11.906857299804688]], [[-29.660424041748044, -11.906857299804688], [-29.660424041748044, -10.406857299804688]], [[-29.660424041748044, -10.406857299804688], [-29.660424041748044, -8.9068572998046882]], [[-29.660424041748044, -8.9068572998046882], [-28.160424041748044, -10.406857299804688]], [[-28.160424041748044, -10.406857299804688], [-28.160424041748044, -11.906857299804688]], [[-28.160424041748044, -11.906857299804688], [-28.160424041748044, -13.406857299804688]], [[-28.160424041748044, -13.406857299804688], [-26.660424041748044, -14.906857299804688]], [[-26.660424041748044, -14.906857299804688], [-26.660424041748044, -13.406857299804688]], [[-26.660424041748044, -13.406857299804688], [-26.660424041748044, -11.906857299804688]], [[-26.660424041748044, -11.906857299804688], [-25.160424041748044, -13.406857299804688]], [[-25.160424041748044, -13.406857299804688], [-25.160424041748044, -14.906857299804688]]], [[[-30.301422882080079, 8.4137212753295891], [-28.801422882080079, 9.9137212753295891]], [[-28.801422882080079, 9.9137212753295891], [-27.301422882080079, 11.413721275329589]]], [[[-28.881581115722657, 2.5202114105224611], [-27.381581115722657, 4.0202114105224611]], [[-27.381581115722657, 4.0202114105224611], [-27.381581115722657, 2.5202114105224611]], [[-27.381581115722657, 2.5202114105224611], [-27.381581115722657, 1.0202114105224609]], [[-27.381581115722657, 1.0202114105224609], [-27.381581115722657, -0.47978858947753911]], [[-27.381581115722657, -0.47978858947753911], [-27.381581115722657, -1.9797885894775391]], [[-27.381581115722657, -1.9797885894775391], [-25.881581115722657, -1.9797885894775391]], [[-25.881581115722657, -1.9797885894775391], [-25.881581115722657, -0.47978858947753911]]], [[[-28.45867042541504, -4.8388174057006843], [-28.45867042541504, -3.3388174057006843]], [[-28.45867042541504, -3.3388174057006843], [-26.95867042541504, -3.3388174057006843]], [[-26.95867042541504, -3.3388174057006843], [-26.95867042541504, -4.8388174057006843]], [[-26.95867042541504, -4.8388174057006843], [-25.45867042541504, -4.8388174057006843]], [[-25.45867042541504, -4.8388174057006843], [-25.45867042541504, -3.3388174057006843]]], [[[-25.881581115722657, 2.5202114105224611], [-25.881581115722657, 4.0202114105224611]], [[-25.881581115722657, 4.0202114105224611], [-25.881581115722657, 5.5202114105224611]], [[-25.881581115722657, 5.5202114105224611], [-24.381581115722657, 5.5202114105224611]], [[-24.381581115722657, 5.5202114105224611], [-24.381581115722657, 4.0202114105224611]], [[-24.381581115722657, 4.0202114105224611], [-24.381581115722657, 2.5202114105224611]], [[-24.381581115722657, 2.5202114105224611], [-24.381581115722657, 1.0202114105224609]], [[-24.381581115722657, 1.0202114105224609], [-24.381581115722657, -0.47978858947753911]], [[-24.381581115722657, -0.47978858947753911], [-22.881581115722657, -0.47978858947753911]], [[-22.881581115722657, -0.47978858947753911], [-22.881581115722657, 1.0202114105224609]], [[-22.881581115722657, 1.0202114105224609], [-22.881581115722657, 2.5202114105224611]], [[-22.881581115722657, 2.5202114105224611], [-22.881581115722657, 4.0202114105224611]], [[-22.881581115722657, 4.0202114105224611], [-22.881581115722657, 5.5202114105224611]], [[-22.881581115722657, 5.5202114105224611], [-22.881581115722657, 7.0202114105224611]], [[-22.881581115722657, 7.0202114105224611], [-21.381581115722657, 8.5202114105224602]], [[-21.381581115722657, 8.5202114105224602], [-21.381581115722657, 7.0202114105224611]], [[-21.381581115722657, 7.0202114105224611], [-21.381581115722657, 5.5202114105224611]], [[-21.381581115722657, 5.5202114105224611], [-21.381581115722657, 4.0202114105224611]], [[-21.381581115722657, 4.0202114105224611], [-21.381581115722657, 2.5202114105224611]], [[-21.381581115722657, 2.5202114105224611], [-21.381581115722657, 1.0202114105224609]], [[-21.381581115722657, 1.0202114105224609], [-21.381581115722657, -0.47978858947753911]], [[-21.381581115722657, -0.47978858947753911], [-19.881581115722657, 1.0202114105224609]], [[-19.881581115722657, 1.0202114105224609], [-19.881581115722657, 2.5202114105224611]], [[-19.881581115722657, 2.5202114105224611], [-19.881581115722657, 4.0202114105224611]], [[-19.881581115722657, 4.0202114105224611], [-19.881581115722657, 5.5202114105224611]], [[-19.881581115722657, 5.5202114105224611], [-19.881581115722657, 7.0202114105224611]], [[-19.881581115722657, 7.0202114105224611], [-19.881581115722657, 8.5202114105224602]], [[-19.881581115722657, 8.5202114105224602], [-19.881581115722657, 10.02021141052246]], [[-19.881581115722657, 10.02021141052246], [-18.381581115722657, 11.52021141052246]]], [[[-24.810272979736329, 14.936087799072265], [-24.810272979736329, 16.436087799072265]], [[-24.810272979736329, 16.436087799072265], [-24.810272979736329, 17.936087799072265]], [[-24.810272979736329, 17.936087799072265], [-24.810272979736329, 19.436087799072265]], [[-24.810272979736329, 19.436087799072265], [-24.810272979736329, 20.936087799072265]], [[-24.810272979736329, 20.936087799072265], [-24.810272979736329, 22.436087799072265]], [[-24.810272979736329, 22.436087799072265], [-24.810272979736329, 23.936087799072265]], [[-24.810272979736329, 23.936087799072265], [-24.810272979736329, 25.436087799072265]], [[-24.810272979736329, 25.436087799072265], [-24.810272979736329, 26.936087799072265]], [[-24.810272979736329, 26.936087799072265], [-24.810272979736329, 28.436087799072265]]], [[[-24.737961578369141, -7.3422372817993171], [-24.737961578369141, -5.8422372817993171]], [[-24.737961578369141, -5.8422372817993171], [-23.237961578369141, -5.8422372817993171]], [[-23.237961578369141, -5.8422372817993171], [-23.237961578369141, -7.3422372817993171]], [[-23.237961578369141, -7.3422372817993171], [-21.737961578369141, -7.3422372817993171]], [[-21.737961578369141, -7.3422372817993171], [-21.737961578369141, -5.8422372817993171]], [[-21.737961578369141, -5.8422372817993171], [-20.237961578369141, -5.8422372817993171]], [[-20.237961578369141, -5.8422372817993171], [-20.237961578369141, -7.3422372817993171]], [[-20.237961578369141, -7.3422372817993171], [-18.737961578369141, -7.3422372817993171]], [[-18.737961578369141, -7.3422372817993171], [-18.737961578369141, -5.8422372817993171]], [[-18.737961578369141, -5.8422372817993171], [-17.237961578369141, -5.8422372817993171]], [[-17.237961578369141, -5.8422372817993171], [-17.237961578369141, -7.3422372817993171]]], [[[-24.301422882080079, 12.913721275329589], [-22.801422882080079, 12.913721275329589]], [[-22.801422882080079, 12.913721275329589], [-21.301422882080079, 12.913721275329589]], [[-21.301422882080079, 12.913721275329589], [-19.801422882080079, 12.913721275329589]], [[-19.801422882080079, 12.913721275329589], [-19.801422882080079, 14.413721275329589]], [[-19.801422882080079, 14.413721275329589], [-18.301422882080079, 14.413721275329589]], [[-18.301422882080079, 14.413721275329589], [-18.301422882080079, 12.913721275329589]], [[-18.301422882080079, 12.913721275329589], [-16.801422882080079, 14.413721275329589]]], [[[-23.96520118713379, -15.814799118041993], [-22.46520118713379, -14.314799118041993]], [[-22.46520118713379, -14.314799118041993], [-20.96520118713379, -12.814799118041993]]], [[[-18.381581115722657, 5.5202114105224611], [-18.381581115722657, 4.0202114105224611]], [[-18.381581115722657, 4.0202114105224611], [-18.381581115722657, 2.5202114105224611]]], [[[-16.768740463256837, 10.408831310272216], [-16.768740463256837, 8.9088313102722161]], [[-16.768740463256837, 8.9088313102722161], [-16.768740463256837, 7.408831310272217]], [[-16.768740463256837, 7.408831310272217], [-16.768740463256837, 5.908831310272217]]], [[[-15.268740463256837, 10.408831310272216], [-15.268740463256837, 11.908831310272216]], [[-15.268740463256837, 11.908831310272216], [-13.768740463256837, 11.908831310272216]], [[-13.768740463256837, 11.908831310272216], [-12.268740463256837, 13.408831310272216]], [[-12.268740463256837, 13.408831310272216], [-10.768740463256837, 13.408831310272216]], [[-10.768740463256837, 13.408831310272216], [-9.2687404632568366, 13.408831310272216]]], [[[-14.96520118713379, 2.1852008819580071], [-14.96520118713379, 0.6852008819580071]], [[-14.96520118713379, 0.6852008819580071], [-14.96520118713379, -0.8147991180419929]], [[-14.96520118713379, -0.8147991180419929], [-14.96520118713379, -2.3147991180419929]], [[-14.96520118713379, -2.3147991180419929], [-14.96520118713379, -3.8147991180419929]], [[-14.96520118713379, -3.8147991180419929], [-14.96520118713379, -5.3147991180419929]], [[-14.96520118713379, -5.3147991180419929], [-13.46520118713379, -3.8147991180419929]], [[-13.46520118713379, -3.8147991180419929], [-13.46520118713379, -2.3147991180419929]], [[-13.46520118713379, -2.3147991180419929], [-13.46520118713379, -0.8147991180419929]]], [[[-14.36858253479004, -7.6852701187133796], [-12.86858253479004, -7.6852701187133796]], [[-12.86858253479004, -7.6852701187133796], [-12.86858253479004, -9.1852701187133796]], [[-12.86858253479004, -9.1852701187133796], [-11.36858253479004, -9.1852701187133796]], [[-11.36858253479004, -9.1852701187133796], [-9.8685825347900398, -9.1852701187133796]], [[-9.8685825347900398, -9.1852701187133796], [-9.8685825347900398, -10.68527011871338]], [[-9.8685825347900398, -10.68527011871338], [-8.3685825347900398, -10.68527011871338]]], [[[-14.085542488098145, 6.7362033843994142], [-12.585542488098145, 6.7362033843994142]]], [[[-13.801422882080079, 8.4137212753295891], [-12.301422882080079, 8.4137212753295891]], [[-12.301422882080079, 8.4137212753295891], [-12.301422882080079, 9.9137212753295891]], [[-12.301422882080079, 9.9137212753295891], [-12.301422882080079, 11.413721275329589]], [[-12.301422882080079, 11.413721275329589], [-10.801422882080079, 11.413721275329589]], [[-10.801422882080079, 11.413721275329589], [-10.801422882080079, 9.9137212753295891]], [[-10.801422882080079, 9.9137212753295891], [-10.801422882080079, 8.4137212753295891]], [[-10.801422882080079, 8.4137212753295891], [-10.801422882080079, 6.91372127532959]], [[-10.801422882080079, 6.91372127532959], [-10.801422882080079, 5.41372127532959]], [[-10.801422882080079, 5.41372127532959], [-9.3014228820800788, 3.91372127532959]], [[-9.3014228820800788, 3.91372127532959], [-9.3014228820800788, 5.41372127532959]], [[-9.3014228820800788, 5.41372127532959], [-9.3014228820800788, 6.91372127532959]], [[-9.3014228820800788, 6.91372127532959], [-9.3014228820800788, 8.4137212753295891]], [[-9.3014228820800788, 8.4137212753295891], [-9.3014228820800788, 9.9137212753295891]], [[-9.3014228820800788, 9.9137212753295891], [-9.3014228820800788, 11.413721275329589]], [[-9.3014228820800788, 11.413721275329589], [-7.8014228820800788, 11.413721275329589]], [[-7.8014228820800788, 11.413721275329589], [-7.8014228820800788, 9.9137212753295891]], [[-7.8014228820800788, 9.9137212753295891], [-7.8014228820800788, 8.4137212753295891]], [[-7.8014228820800788, 8.4137212753295891], [-7.8014228820800788, 6.91372127532959]], [[-7.8014228820800788, 6.91372127532959], [-7.8014228820800788, 5.41372127532959]], [[-7.8014228820800788, 5.41372127532959], [-7.8014228820800788, 3.91372127532959]], [[-7.8014228820800788, 3.91372127532959], [-7.8014228820800788, 2.41372127532959]], [[-7.8014228820800788, 2.41372127532959], [-7.8014228820800788, 0.91372127532959002]], [[-7.8014228820800788, 0.91372127532959002], [-7.8014228820800788, -0.58627872467040998]], [[-7.8014228820800788, -0.58627872467040998], [-6.3014228820800788, -2.08627872467041]], [[-6.3014228820800788, -2.08627872467041], [-6.3014228820800788, -0.58627872467040998]], [[-6.3014228820800788, -0.58627872467040998], [-6.3014228820800788, 0.91372127532959002]], [[-6.3014228820800788, 0.91372127532959002], [-6.3014228820800788, 2.41372127532959]], [[-6.3014228820800788, 2.41372127532959], [-6.3014228820800788, 3.91372127532959]], [[-6.3014228820800788, 3.91372127532959], [-6.3014228820800788, 5.41372127532959]], [[-6.3014228820800788, 5.41372127532959], [-6.3014228820800788, 6.91372127532959]], [[-6.3014228820800788, 6.91372127532959], [-6.3014228820800788, 8.4137212753295891]], [[-6.3014228820800788, 8.4137212753295891], [-6.3014228820800788, 9.9137212753295891]], [[-6.3014228820800788, 9.9137212753295891], [-4.8014228820800788, 8.4137212753295891]], [[-4.8014228820800788, 8.4137212753295891], [-4.8014228820800788, 6.91372127532959]], [[-4.8014228820800788, 6.91372127532959], [-4.8014228820800788, 5.41372127532959]], [[-4.8014228820800788, 5.41372127532959], [-4.8014228820800788, 3.91372127532959]], [[-4.8014228820800788, 3.91372127532959], [-4.8014228820800788, 2.41372127532959]], [[-4.8014228820800788, 2.41372127532959], [-4.8014228820800788, 0.91372127532959002]], [[-4.8014228820800788, 0.91372127532959002], [-4.8014228820800788, -0.58627872467040998]], [[-4.8014228820800788, -0.58627872467040998], [-4.8014228820800788, -2.08627872467041]], [[-4.8014228820800788, -2.08627872467041], [-4.8014228820800788, -3.58627872467041]], [[-4.8014228820800788, -3.58627872467041], [-3.3014228820800788, -3.58627872467041]], [[-3.3014228820800788, -3.58627872467041], [-3.3014228820800788, -2.08627872467041]], [[-3.3014228820800788, -2.08627872467041], [-3.3014228820800788, -0.58627872467040998]], [[-3.3014228820800788, -0.58627872467040998], [-3.3014228820800788, 0.91372127532959002]], [[-3.3014228820800788, 0.91372127532959002], [-3.3014228820800788, 2.41372127532959]], [[-3.3014228820800788, 2.41372127532959], [-3.3014228820800788, 3.91372127532959]], [[-3.3014228820800788, 3.91372127532959], [-3.3014228820800788, 5.41372127532959]], [[-3.3014228820800788, 5.41372127532959], [-3.3014228820800788, 6.91372127532959]]], [[[-3.5855424880981452, 11.236203384399413], [-2.0855424880981452, 12.736203384399413]], [[-2.0855424880981452, 12.736203384399413], [-0.58554248809814524, 12.736203384399413]], [[-0.58554248809814524, 12.736203384399413], [-0.58554248809814524, 14.236203384399413]], [[-0.58554248809814524, 14.236203384399413], [0.91445751190185476, 15.736203384399413]], [[0.91445751190185476, 15.736203384399413], [0.91445751190185476, 14.236203384399413]], [[0.91445751190185476, 14.236203384399413], [2.4144575119018548, 15.736203384399413]]], [[[-2.81802921295166, -11.329608726501466], [-1.31802921295166, -11.329608726501466]], [[-1.31802921295166, -11.329608726501466], [-1.31802921295166, -12.829608726501466]], [[-1.31802921295166, -12.829608726501466], [0.18197078704834002, -11.329608726501466]], [[0.18197078704834002, -11.329608726501466], [1.68197078704834, -11.329608726501466]], [[1.68197078704834, -11.329608726501466], [1.68197078704834, -12.829608726501466]], [[1.68197078704834, -12.829608726501466], [3.18197078704834, -12.829608726501466]], [[3.18197078704834, -12.829608726501466], [3.18197078704834, -11.329608726501466]], [[3.18197078704834, -11.329608726501466], [4.68197078704834, -11.329608726501466]], [[4.68197078704834, -11.329608726501466], [4.68197078704834, -12.829608726501466]], [[4.68197078704834, -12.829608726501466], [6.18197078704834, -12.829608726501466]], [[6.18197078704834, -12.829608726501466], [6.18197078704834, -11.329608726501466]], [[6.18197078704834, -11.329608726501466], [7.68197078704834, -11.329608726501466]], [[7.68197078704834, -11.329608726501466], [7.68197078704834, -12.829608726501466]], [[7.68197078704834, -12.829608726501466], [9.1819707870483391, -12.829608726501466]], [[9.1819707870483391, -12.829608726501466], [9.1819707870483391, -11.329608726501466]], [[9.1819707870483391, -11.329608726501466], [10.681970787048339, -11.329608726501466]], [[10.681970787048339, -11.329608726501466], [10.681970787048339, -12.829608726501466]], [[10.681970787048339, -12.829608726501466], [12.181970787048339, -12.829608726501466]], [[12.181970787048339, -12.829608726501466], [13.681970787048339, -12.829608726501466]]], [[[-1.8014228820800788, 3.91372127532959], [-1.8014228820800788, 2.41372127532959]], [[-1.8014228820800788, 2.41372127532959], [-1.8014228820800788, 0.91372127532959002]], [[-1.8014228820800788, 0.91372127532959002], [-1.8014228820800788, -0.58627872467040998]], [[-1.8014228820800788, -0.58627872467040998], [-1.8014228820800788, -2.08627872467041]], [[-1.8014228820800788, -2.08627872467041], [-1.8014228820800788, -3.58627872467041]], [[-1.8014228820800788, -3.58627872467041], [-0.30142288208007884, -3.58627872467041]], [[-0.30142288208007884, -3.58627872467041], [-0.30142288208007884, -2.08627872467041]], [[-0.30142288208007884, -2.08627872467041], [-0.30142288208007884, -0.58627872467040998]], [[-0.30142288208007884, -0.58627872467040998], [-0.30142288208007884, 0.91372127532959002]], [[-0.30142288208007884, 0.91372127532959002], [-0.30142288208007884, 2.41372127532959]], [[-0.30142288208007884, 2.41372127532959], [1.1985771179199212, 2.41372127532959]], [[1.1985771179199212, 2.41372127532959], [1.1985771179199212, 0.91372127532959002]], [[1.1985771179199212, 0.91372127532959002], [1.1985771179199212, -0.58627872467040998]], [[1.1985771179199212, -0.58627872467040998], [1.1985771179199212, -2.08627872467041]], [[1.1985771179199212, -2.08627872467041], [1.1985771179199212, -3.58627872467041]], [[1.1985771179199212, -3.58627872467041], [2.6985771179199212, -3.58627872467041]], [[2.6985771179199212, -3.58627872467041], [2.6985771179199212, -2.08627872467041]], [[2.6985771179199212, -2.08627872467041], [2.6985771179199212, -0.58627872467040998]], [[2.6985771179199212, -0.58627872467040998], [2.6985771179199212, 0.91372127532959002]], [[2.6985771179199212, 0.91372127532959002], [4.1985771179199212, 0.91372127532959002]], [[4.1985771179199212, 0.91372127532959002], [4.1985771179199212, -0.58627872467040998]], [[4.1985771179199212, -0.58627872467040998], [4.1985771179199212, -2.08627872467041]], [[4.1985771179199212, -2.08627872467041], [4.1985771179199212, -3.58627872467041]], [[4.1985771179199212, -3.58627872467041], [4.1985771179199212, -5.08627872467041]], [[4.1985771179199212, -5.08627872467041], [5.6985771179199212, -5.08627872467041]], [[5.6985771179199212, -5.08627872467041], [5.6985771179199212, -3.58627872467041]], [[5.6985771179199212, -3.58627872467041], [5.6985771179199212, -2.08627872467041]], [[5.6985771179199212, -2.08627872467041], [5.6985771179199212, -0.58627872467040998]], [[5.6985771179199212, -0.58627872467040998], [5.6985771179199212, 0.91372127532959002]], [[5.6985771179199212, 0.91372127532959002], [7.1985771179199212, 0.91372127532959002]], [[7.1985771179199212, 0.91372127532959002], [7.1985771179199212, -0.58627872467040998]], [[7.1985771179199212, -0.58627872467040998], [7.1985771179199212, -2.08627872467041]], [[7.1985771179199212, -2.08627872467041], [7.1985771179199212, -3.58627872467041]], [[7.1985771179199212, -3.58627872467041], [7.1985771179199212, -5.08627872467041]], [[7.1985771179199212, -5.08627872467041], [8.6985771179199212, -5.08627872467041]], [[8.6985771179199212, -5.08627872467041], [8.6985771179199212, -3.58627872467041]], [[8.6985771179199212, -3.58627872467041], [8.6985771179199212, -2.08627872467041]], [[8.6985771179199212, -2.08627872467041], [8.6985771179199212, -0.58627872467040998]], [[8.6985771179199212, -0.58627872467040998], [8.6985771179199212, 0.91372127532959002]], [[8.6985771179199212, 0.91372127532959002], [10.198577117919921, 0.91372127532959002]], [[10.198577117919921, 0.91372127532959002], [10.198577117919921, -0.58627872467040998]], [[10.198577117919921, -0.58627872467040998], [10.198577117919921, -2.08627872467041]], [[10.198577117919921, -2.08627872467041], [10.198577117919921, -3.58627872467041]], [[10.198577117919921, -3.58627872467041], [10.198577117919921, -5.08627872467041]], [[10.198577117919921, -5.08627872467041], [11.698577117919921, -5.08627872467041]], [[11.698577117919921, -5.08627872467041], [11.698577117919921, -3.58627872467041]], [[11.698577117919921, -3.58627872467041], [11.698577117919921, -2.08627872467041]], [[11.698577117919921, -2.08627872467041], [11.698577117919921, -0.58627872467040998]], [[11.698577117919921, -0.58627872467040998], [11.698577117919921, 0.91372127532959002]], [[11.698577117919921, 0.91372127532959002], [13.198577117919921, 0.91372127532959002]], [[13.198577117919921, 0.91372127532959002], [13.198577117919921, -0.58627872467040998]], [[13.198577117919921, -0.58627872467040998], [13.198577117919921, -2.08627872467041]], [[13.198577117919921, -2.08627872467041], [13.198577117919921, -3.58627872467041]], [[13.198577117919921, -3.58627872467041], [13.198577117919921, -5.08627872467041]], [[13.198577117919921, -5.08627872467041], [14.698577117919921, -5.08627872467041]], [[14.698577117919921, -5.08627872467041], [14.698577117919921, -3.58627872467041]], [[14.698577117919921, -3.58627872467041], [14.698577117919921, -2.08627872467041]], [[14.698577117919921, -2.08627872467041], [14.698577117919921, -0.58627872467040998]], [[14.698577117919921, -0.58627872467040998], [14.698577117919921, 0.91372127532959002]], [[14.698577117919921, 0.91372127532959002], [16.198577117919921, 0.91372127532959002]], [[16.198577117919921, 0.91372127532959002], [16.198577117919921, -0.58627872467040998]], [[16.198577117919921, -0.58627872467040998], [16.198577117919921, -2.08627872467041]], [[16.198577117919921, -2.08627872467041], [16.198577117919921, -3.58627872467041]], [[16.198577117919921, -3.58627872467041], [16.198577117919921, -5.08627872467041]], [[16.198577117919921, -5.08627872467041], [17.698577117919921, -5.08627872467041]], [[17.698577117919921, -5.08627872467041], [17.698577117919921, -3.58627872467041]], [[17.698577117919921, -3.58627872467041], [17.698577117919921, -2.08627872467041]], [[17.698577117919921, -2.08627872467041], [17.698577117919921, -0.58627872467040998]], [[17.698577117919921, -0.58627872467040998], [17.698577117919921, 0.91372127532959002]], [[17.698577117919921, 0.91372127532959002], [19.198577117919921, -0.58627872467040998]], [[19.198577117919921, -0.58627872467040998], [19.198577117919921, -2.08627872467041]], [[19.198577117919921, -2.08627872467041], [19.198577117919921, -3.58627872467041]], [[19.198577117919921, -3.58627872467041], [19.198577117919921, -5.08627872467041]], [[19.198577117919921, -5.08627872467041], [20.698577117919921, -5.08627872467041]], [[20.698577117919921, -5.08627872467041], [20.698577117919921, -3.58627872467041]], [[20.698577117919921, -3.58627872467041], [20.698577117919921, -2.08627872467041]], [[20.698577117919921, -2.08627872467041], [20.698577117919921, -0.58627872467040998]], [[20.698577117919921, -0.58627872467040998], [22.198577117919921, -2.08627872467041]]], [[[-1.6518152236938475, 21.941670608520507], [-0.15181522369384748, 21.941670608520507]], [[-0.15181522369384748, 21.941670608520507], [-0.15181522369384748, 20.441670608520507]], [[-0.15181522369384748, 20.441670608520507], [1.3481847763061525, 20.441670608520507]], [[1.3481847763061525, 20.441670608520507], [1.3481847763061525, 21.941670608520507]], [[1.3481847763061525, 21.941670608520507], [2.8481847763061525, 20.441670608520507]], [[2.8481847763061525, 20.441670608520507], [4.3481847763061525, 20.441670608520507]], [[4.3481847763061525, 20.441670608520507], [5.8481847763061525, 20.441670608520507]], [[5.8481847763061525, 20.441670608520507], [7.3481847763061525, 20.441670608520507]], [[7.3481847763061525, 20.441670608520507], [8.8481847763061516, 20.441670608520507]], [[8.8481847763061516, 20.441670608520507], [10.348184776306152, 20.441670608520507]], [[10.348184776306152, 20.441670608520507], [11.848184776306152, 20.441670608520507]], [[11.848184776306152, 20.441670608520507], [13.348184776306152, 20.441670608520507]]], [[[4.7386543273925783, -17.02208595275879], [6.2386543273925783, -17.02208595275879]], [[6.2386543273925783, -17.02208595275879], [7.7386543273925783, -17.02208595275879]]], [[[5.8574692726135256, 8.3518502235412591], [5.8574692726135256, 9.8518502235412591]], [[5.8574692726135256, 9.8518502235412591], [5.8574692726135256, 11.351850223541259]], [[5.8574692726135256, 11.351850223541259], [7.3574692726135256, 11.351850223541259]], [[7.3574692726135256, 11.351850223541259], [7.3574692726135256, 9.8518502235412591]], [[7.3574692726135256, 9.8518502235412591], [7.3574692726135256, 8.3518502235412591]], [[7.3574692726135256, 8.3518502235412591], [7.3574692726135256, 6.8518502235412599]], [[7.3574692726135256, 6.8518502235412599], [8.8574692726135247, 6.8518502235412599]], [[8.8574692726135247, 6.8518502235412599], [8.8574692726135247, 8.3518502235412591]], [[8.8574692726135247, 8.3518502235412591], [8.8574692726135247, 9.8518502235412591]], [[8.8574692726135247, 9.8518502235412591], [8.8574692726135247, 11.351850223541259]], [[8.8574692726135247, 11.351850223541259], [10.357469272613525, 11.351850223541259]], [[10.357469272613525, 11.351850223541259], [10.357469272613525, 9.8518502235412591]], [[10.357469272613525, 9.8518502235412591], [10.357469272613525, 8.3518502235412591]], [[10.357469272613525, 8.3518502235412591], [10.357469272613525, 6.8518502235412599]], [[10.357469272613525, 6.8518502235412599], [11.857469272613525, 6.8518502235412599]], [[11.857469272613525, 6.8518502235412599], [11.857469272613525, 8.3518502235412591]], [[11.857469272613525, 8.3518502235412591], [11.857469272613525, 9.8518502235412591]], [[11.857469272613525, 9.8518502235412591], [11.857469272613525, 11.351850223541259]], [[11.857469272613525, 11.351850223541259], [13.357469272613525, 11.351850223541259]], [[13.357469272613525, 11.351850223541259], [13.357469272613525, 9.8518502235412591]], [[13.357469272613525, 9.8518502235412591], [13.357469272613525, 8.3518502235412591]], [[13.357469272613525, 8.3518502235412591], [13.357469272613525, 6.8518502235412599]], [[13.357469272613525, 6.8518502235412599], [14.857469272613525, 6.8518502235412599]], [[14.857469272613525, 6.8518502235412599], [14.857469272613525, 8.3518502235412591]], [[14.857469272613525, 8.3518502235412591], [14.857469272613525, 9.8518502235412591]], [[14.857469272613525, 9.8518502235412591], [14.857469272613525, 11.351850223541259]], [[14.857469272613525, 11.351850223541259], [16.357469272613525, 11.351850223541259]], [[16.357469272613525, 11.351850223541259], [16.357469272613525, 9.8518502235412591]], [[16.357469272613525, 9.8518502235412591], [16.357469272613525, 8.3518502235412591]], [[16.357469272613525, 8.3518502235412591], [16.357469272613525, 6.8518502235412599]], [[16.357469272613525, 6.8518502235412599], [17.857469272613525, 6.8518502235412599]], [[17.857469272613525, 6.8518502235412599], [17.857469272613525, 8.3518502235412591]], [[17.857469272613525, 8.3518502235412591], [17.857469272613525, 9.8518502235412591]], [[17.857469272613525, 9.8518502235412591], [17.857469272613525, 11.351850223541259]], [[17.857469272613525, 11.351850223541259], [19.357469272613525, 11.351850223541259]], [[19.357469272613525, 11.351850223541259], [19.357469272613525, 9.8518502235412591]], [[19.357469272613525, 9.8518502235412591], [19.357469272613525, 8.3518502235412591]], [[19.357469272613525, 8.3518502235412591], [19.357469272613525, 6.8518502235412599]], [[19.357469272613525, 6.8518502235412599], [20.857469272613525, 6.8518502235412599]], [[20.857469272613525, 6.8518502235412599], [20.857469272613525, 8.3518502235412591]], [[20.857469272613525, 8.3518502235412591], [20.857469272613525, 9.8518502235412591]], [[20.857469272613525, 9.8518502235412591], [20.857469272613525, 11.351850223541259]], [[20.857469272613525, 11.351850223541259], [22.357469272613525, 9.8518502235412591]], [[22.357469272613525, 9.8518502235412591], [22.357469272613525, 8.3518502235412591]], [[22.357469272613525, 8.3518502235412591], [22.357469272613525, 6.8518502235412599]]], [[[8.1540114402770989, 23.555093002319335], [9.6540114402770989, 23.555093002319335]], [[9.6540114402770989, 23.555093002319335], [11.154011440277099, 23.555093002319335]], [[11.154011440277099, 23.555093002319335], [12.654011440277099, 22.055093002319335]], [[12.654011440277099, 22.055093002319335], [14.154011440277099, 22.055093002319335]], [[14.154011440277099, 22.055093002319335], [15.654011440277099, 22.055093002319335]]], [[[18.654011440277099, 20.555093002319335], [20.154011440277099, 20.555093002319335]], [[20.154011440277099, 20.555093002319335], [21.654011440277099, 19.055093002319335]], [[21.654011440277099, 19.055093002319335], [23.154011440277099, 17.555093002319335]], [[23.154011440277099, 17.555093002319335], [24.654011440277099, 16.055093002319335]], [[24.654011440277099, 16.055093002319335], [26.154011440277099, 14.555093002319335]]], [[[19.738654327392577, -12.52208595275879], [21.238654327392577, -12.52208595275879]], [[21.238654327392577, -12.52208595275879], [22.738654327392577, -11.02208595275879]], [[22.738654327392577, -11.02208595275879], [24.238654327392577, -11.02208595275879]]], [[[27.238654327392577, -9.5220859527587898], [28.738654327392577, -8.0220859527587898]], [[28.738654327392577, -8.0220859527587898], [28.738654327392577, -6.5220859527587898]], [[28.738654327392577, -6.5220859527587898], [30.238654327392577, -6.5220859527587898]]], [[[27.88754768371582, 9.7335817337036126], [27.88754768371582, 11.233581733703613]]], [[[29.38754768371582, 8.2335817337036126], [29.38754768371582, 6.7335817337036126]], [[29.38754768371582, 6.7335817337036126], [29.38754768371582, 5.2335817337036126]], [[29.38754768371582, 5.2335817337036126], [29.38754768371582, 3.7335817337036126]], [[29.38754768371582, 3.7335817337036126], [29.38754768371582, 2.2335817337036126]], [[29.38754768371582, 2.2335817337036126], [29.38754768371582, 0.73358173370361257]], [[29.38754768371582, 0.73358173370361257], [29.38754768371582, -0.76641826629638743]], [[29.38754768371582, -0.76641826629638743], [29.38754768371582, -2.2664182662963874]]], [[[31.738654327392577, -3.5220859527587898], [31.738654327392577, -2.0220859527587898]]], [[[33.238654327392581, 0.97791404724121023], [33.238654327392581, -0.52208595275878977]], [[33.238654327392581, -0.52208595275878977], [33.238654327392581, -2.0220859527587898]], [[33.238654327392581, -2.0220859527587898], [34.738654327392581, -0.52208595275878977]], [[34.738654327392581, -0.52208595275878977], [36.238654327392581, -2.0220859527587898]]], [[[33.238654327392581, 6.9779140472412102], [33.238654327392581, 5.4779140472412102]]], [[[35.18252868652344, 0.72148151397705074], [35.18252868652344, 2.221481513977051]], [[35.18252868652344, 2.221481513977051], [35.18252868652344, 3.721481513977051]], [[35.18252868652344, 3.721481513977051], [35.18252868652344, 5.221481513977051]], [[35.18252868652344, 5.221481513977051], [36.68252868652344, 3.721481513977051]], [[36.68252868652344, 3.721481513977051], [36.68252868652344, 2.221481513977051]], [[36.68252868652344, 2.221481513977051], [36.68252868652344, 0.72148151397705074]]]]
    # formatting
    lines = []
    for two_point in paths:
        lines.append([i[0] for i in two_point])
        lines[-1].append(two_point[-1][1])
    lines.append([500])
    print(lines)
    # lines = [[[0,0],[1,1]],[[5,5],[6,6]]]
    print(lines)
    # paths = [[[1,1],[5,5],[6,6]]]
    import matplotlib.pyplot as plt 
    for line in paths:
        plt.plot([i[0][0] for i in line], [i[0][1] for i in line])

    res = pyclipper.scale_to_clipper(lines)

    pc = pyclipper.PyclipperOffset()
    pc.AddPaths(res, pyclipper.JT_SQUARE, pyclipper.ET_OPENSQUARE)

    solution = pc.Execute(pyclipper.scale_to_clipper(5))
    res = pyclipper.scale_from_clipper(solution)
    print(res)
    for line in res:
        plt.plot([i[0] for i in line], [i[1] for i in line])
        plt.plot([line[-1][0],line[0][0]],[line[-1][1],line[0][1]])
    plt.show()
if __name__ == '__main__':
    main()

